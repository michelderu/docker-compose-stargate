version: '2'

services:
  backend-1:
    image: cassandra:3.11
    container_name: backend-1
    networks:
      - backend
    ports:
      - 9044:9042
    mem_limit: 1G
    environment:
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=512M
      - CASSANDRA_SEEDS=backend-1
      - CASSANDRA_CLUSTER_NAME=backend
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool status | grep -c UN) = 1 ]"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend-2:
    image: cassandra:3.11
    container_name: backend-2
    networks:
      - backend
    mem_limit: 1G
    depends_on:
      - backend-1
    environment:
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=512M
      - CASSANDRA_SEEDS=backend-1
      - CASSANDRA_CLUSTER_NAME=backend
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool status | grep -c UN) = 2 ]"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      backend-1:
        condition: service_healthy
  backend-3:
    image: cassandra:3.11
    container_name: backend-3
    networks:
      - backend
    mem_limit: 1G
    depends_on:
      - backend-2
    environment:
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=512M
      - CASSANDRA_SEEDS=backend-1
      - CASSANDRA_CLUSTER_NAME=backend
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool status | grep -c UN) = 3 ]"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      backend-2:
        condition: service_healthy
  stargate:
    image: stargateio/stargate-3_11:v1.0.3
    container_name: stargate
    depends_on: 
      - backend-1
    networks:
      - backend
    ports:
      # CQL Service
      - 9042:9042
      # GraphQL interface for CRUD
      - 8080:8080
      # Rest authorization (token)
      - 8081:8081
      # REST for CRUD localhost:8082/swagger-ui
      - 8082:8082
    mem_limit: 1G
    environment:
      - JAVA_OPTS="-Xmx256M"
      - CLUSTER_NAME=backend
      - CLUSTER_VERSION=3.11
      - SEED=backend-1
      - RACK_NAME=rack1
      - DATACENTER_NAME=dc1
      - DEVELOPER_MODE=false
    depends_on:
      backend-3:
        condition: service_healthy

networks:
  backend: